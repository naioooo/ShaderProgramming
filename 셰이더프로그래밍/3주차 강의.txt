코드보다 셰이더에 중점둔 강의다

버텍스 쉐이더 
하나의 점단위로 처리되는 것

프레그먼트 쉐이더
하나의 픽셀단뒤로 처리되는 스테이지

C언어를 기반으로 함

static -> 텍스쳐 메모리에 저장
dynamic -> 지피유 메모리에 저장하지만 cpu에도 저장

셰이더 외부입력
1. 버텍스 셰이더
2. 프리미티브 어셈블리
3. 레스터제이션 , 인터폴레이션
4. 프래그먼트 셰이더
5. 프레임 버퍼

유니폼 선언자 사용
유니폼으로 선언된 변수는 외부에서 입력된 값을 가지고 있으며
셰이더 내부에선 읽기만 가능
셰이더 전반에 걸쳐 읽기가 가능함

uniform float gScale;// 이런식으로 선언 -> 외부에서받아오는값

GLint glGetUniformLocation(); 유니폼을 가져오는 함수
아이디를 리턴한다.
이름이 다르거나 없거나 사용하지않아 삭제된경우 오류가 발생

glUniform{id, 값} 을 통해 아이디값을 이용해 값을 저장할수있다.
 
셰이더 컴파일
0. 셰이더 프로그램 생성
1. 셰이더 오브젝트 생성
2. 오브젝트에 소스 할당 및 컴파일
3. 컴파일 완료 확인
3. 셰이더 프로그램에 어태치
4. 어태치 완료후 링크 수행
링크완료 확인 후 사용준비끝
사용시 아래 함수를 사전에 불러줘야 해당 셰이더 프로그램 동작

실습 
컬러 입력
포지션 입력
변화가 있는 입력







